name: Selenoid Tests Workflow

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Pull browser images
      run: |
        docker pull selenoid/chrome:120.0
        docker pull aerokube/selenoid:latest-release

    - name: Prepare test assets
      run: |
        # Создаем папку для тестовых файлов
        mkdir -p test-assets
        
        # Скачиваем тестовое изображение (или используем свое)
        wget https://via.placeholder.com/300x200.png -O test-assets/test-image.png
        
        # Проверяем
        echo "Содержимое test-assets:"
        ls -la test-assets/
        file test-assets/test-image.png  # Проверяем тип файла

    - name: Prepare Selenoid config
      run: |
        mkdir -p selenoid-config
        echo '{
          "chrome": {
            "default": "120.0",
            "versions": {
              "120.0": {
                "image": "selenoid/chrome:120.0",
                "port": "4444",
                "path": "/",
                "env": ["TZ=UTC"],
                "volumes": ["/github/workspace/test-assets:/assets:ro"],
                "tmpfs": {
                  "/tmp": "size=512m",
                  "/dev/shm": "size=512m"
                }
              }
            }
          }
        }' > selenoid-config/browsers.json

    - name: Start Selenoid
      run: |
        docker run -d --name selenoid \
          -p 4444:4444 \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(pwd)/selenoid-config:/etc/selenoid \
          -v $(pwd)/test-assets:/assets:ro \
          aerokube/selenoid:latest-release \
          -limit 5
        
        echo "Waiting for Selenoid to start..."
        sleep 15
        curl -v http://localhost:4444/status

        # Проверяем, что файл доступен внутри контейнера
        docker exec selenoid ls -la /assets

    - name: Run tests
      run: |
        python -m pytest --alluredir=allure-results -v
      env:
        SELENOID_ENABLED: "true"
        TEST_IMAGE_PATH: "/assets/test-image.png"  # Передаем путь в тесты

    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: allure-results/

    - name: Clean up
      if: always()
      run: |
        docker stop selenoid || true
        docker rm selenoid || true
        rm -rf test-assets