name: Selenoid Tests Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    services:
      selenoid:
        image: aerokube/selenoid:latest-release
        ports:
          - "4444:4444"
        options: >-
          --health-cmd "wget --spider http://localhost:4444/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          OVERRIDE_VIDEO_OUTPUT_DIR: /tmp/video
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Prepare browsers.json
      run: |
        mkdir -p ./selenoid-config
        echo '{
          "chrome": {
            "default": "128.0",
            "versions": {
              "128.0": {
                "image": "selenoid/chrome:128.0",
                "port": "4444",
                "path": "/"
              }
            }
          }
        }' > ./selenoid-config/browsers.json
        
    - name: Wait for Selenoid
      run: |
        for i in {1..10}; do
          if curl -s http://localhost:4444/status | grep -q '"total":1'; then
            echo "Selenoid is ready!"
            exit 0
          fi
          echo "Waiting for Selenoid..."
          sleep 5
        done
        echo "Selenoid failed to start"
        exit 1
        
    - name: Run tests
      run: |
        python -m pytest --alluredir=allure-results
      env:
        SELENOID_URL: http://localhost:4444/wd/hub
        
    - name: Upload allure results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: allure-results